import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Textarea } from '@/components/ui/textarea';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group';
import { Label } from '@/components/ui/label';
import { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from '@/components/ui/alert-dialog';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Badge } from '@/components/ui/badge';
import { XCircle, Clock, AlertTriangle, CheckCircle } from 'lucide-react';

interface OrderCancellationProps {
  orderId: string;
  onCancel: (orderId: string, reason: string, additionalInfo?: string) => void;
}

const CANCELLATION_REASONS = [
  {
    id: 'changed_mind',
    label: '–ü–µ—Ä–µ–¥—É–º–∞–ª',
    description: '–ë–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω –∑–∞–∫–∞–∑'
  },
  {
    id: 'wrong_order',
    label: '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–∫–∞–∑',
    description: '–ó–∞–∫–∞–∑–∞–ª –Ω–µ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–µ–ª'
  },
  {
    id: 'too_long',
    label: '–î–æ–ª–≥–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞',
    description: '–î–æ—Å—Ç–∞–≤–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏'
  },
  {
    id: 'found_cheaper',
    label: '–ù–∞—à–µ–ª –¥–µ—à–µ–≤–ª–µ',
    description: '–ù–∞—à–µ–ª –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π –∑–∞–∫–∞–∑ –ø–æ –±–æ–ª–µ–µ –Ω–∏–∑–∫–æ–π —Ü–µ–Ω–µ'
  },
  {
    id: 'emergency',
    label: '–ß—Ä–µ–∑–≤—ã—á–∞–π–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è',
    description: '–í–æ–∑–Ω–∏–∫–ª–∏ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω—ã–µ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞'
  },
  {
    id: 'other',
    label: '–î—Ä—É–≥–∞—è –ø—Ä–∏—á–∏–Ω–∞',
    description: '–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏'
  }
];

const OrderCancellation: React.FC<OrderCancellationProps> = ({ orderId, onCancel }) => {
  const [selectedReason, setSelectedReason] = useState('');
  const [additionalInfo, setAdditionalInfo] = useState('');
  const [isLoading, setIsLoading] = useState(false);

  const handleCancel = async () => {
    if (!selectedReason) return;
    
    setIsLoading(true);
    
    // Simulate API call delay
    await new Promise(resolve => setTimeout(resolve, 1000));
    
    const reasonLabel = CANCELLATION_REASONS.find(r => r.id === selectedReason)?.label || selectedReason;
    onCancel(orderId, reasonLabel, additionalInfo);
    
    setIsLoading(false);
  };

  const canCancel = selectedReason && (!selectedReason.includes('other') || additionalInfo.trim());

  return (
    <Card className="border-destructive/20">
      <CardHeader className="pb-4">
        <CardTitle className="flex items-center gap-2 text-destructive">
          <XCircle className="w-5 h-5" />
          –û—Ç–º–µ–Ω–∞ –∑–∞–∫–∞–∑–∞
        </CardTitle>
      </CardHeader>
      <CardContent className="space-y-6">
        {/* Cancellation Policy */}
        <Alert>
          <AlertTriangle className="h-4 w-4" />
          <AlertDescription>
            <div className="space-y-2">
              <p className="font-medium">–£—Å–ª–æ–≤–∏—è –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–∞:</p>
              <ul className="text-sm space-y-1 ml-4 list-disc">
                <li>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –æ—Ç–º–µ–Ω–∞ –¥–æ –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è</li>
                <li>–ü–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è - –≤–æ–∑–º–æ–∂–Ω–∞ —á–∞—Å—Ç–∏—á–Ω–∞—è –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è</li>
                <li>–ü—Ä–∏ –¥–æ—Å—Ç–∞–≤–∫–µ –∫—É—Ä—å–µ—Ä–æ–º - –æ—Ç–º–µ–Ω–∞ –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –ø—Ä–∏–±—ã—Ç–∏—è</li>
              </ul>
            </div>
          </AlertDescription>
        </Alert>

        {/* Status Indicator */}
        <div className="flex items-center gap-2 p-3 bg-muted/30 rounded-lg">
          <Clock className="w-4 h-4 text-warning" />
          <div className="flex-1">
            <p className="text-sm font-medium">–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å</p>
            <p className="text-xs text-muted-foreground">–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω, –º–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ</p>
          </div>
          <Badge variant="secondary" className="bg-warning/20 text-warning border-warning/30">
            –ú–æ–∂–Ω–æ –æ—Ç–º–µ–Ω–∏—Ç—å
          </Badge>
        </div>

        {/* Cancellation Reasons */}
        <div>
          <Label className="text-base font-medium mb-3 block">
            –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–∞ *
          </Label>
          <RadioGroup 
            value={selectedReason} 
            onValueChange={setSelectedReason}
            className="space-y-3"
          >
            {CANCELLATION_REASONS.map((reason) => (
              <div key={reason.id} className="flex items-start space-x-3 p-3 border rounded-lg hover:bg-muted/30 transition-colors">
                <RadioGroupItem value={reason.id} id={reason.id} className="mt-0.5" />
                <Label htmlFor={reason.id} className="flex-1 cursor-pointer">
                  <div className="font-medium">{reason.label}</div>
                  <div className="text-sm text-muted-foreground">{reason.description}</div>
                </Label>
              </div>
            ))}
          </RadioGroup>
        </div>

        {/* Additional Information */}
        {selectedReason && (
          <div>
            <Label htmlFor="additional-info" className="text-base font-medium">
              –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è {selectedReason === 'other' && '*'}
            </Label>
            <Textarea
              id="additional-info"
              value={additionalInfo}
              onChange={(e) => setAdditionalInfo(e.target.value)}
              placeholder={
                selectedReason === 'other' 
                  ? "–û–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–º–µ–Ω—ã –∑–∞–∫–∞–∑–∞..."
                  : "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)..."
              }
              className="mt-2"
              rows={3}
            />
          </div>
        )}

        {/* Cancellation Button */}
        <AlertDialog>
          <AlertDialogTrigger asChild>
            <Button 
              variant="destructive" 
              className="w-full"
              disabled={!canCancel}
            >
              <XCircle className="w-4 h-4 mr-2" />
              –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ #{orderId}
            </Button>
          </AlertDialogTrigger>
          <AlertDialogContent>
            <AlertDialogHeader>
              <AlertDialogTitle className="flex items-center gap-2">
                <AlertTriangle className="w-5 h-5 text-destructive" />
                –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã
              </AlertDialogTitle>
              <AlertDialogDescription>
                –í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑ #{orderId}?
                <br />
                <span className="font-medium">
                  –ü—Ä–∏—á–∏–Ω–∞: {CANCELLATION_REASONS.find(r => r.id === selectedReason)?.label}
                </span>
                {additionalInfo && (
                  <div className="mt-2 p-2 bg-muted rounded text-sm">
                    <strong>–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:</strong> {additionalInfo}
                  </div>
                )}
              </AlertDialogDescription>
            </AlertDialogHeader>
            <AlertDialogFooter>
              <AlertDialogCancel>–ù–µ –æ—Ç–º–µ–Ω—è—Ç—å</AlertDialogCancel>
              <AlertDialogAction 
                onClick={handleCancel}
                disabled={isLoading}
                className="bg-destructive hover:bg-destructive/90"
              >
                {isLoading ? (
                  <>
                    <div className="w-4 h-4 border-2 border-white border-t-transparent rounded-full animate-spin mr-2" />
                    –û—Ç–º–µ–Ω—è–µ–º...
                  </>
                ) : (
                  <>
                    <CheckCircle className="w-4 h-4 mr-2" />
                    –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ—Ç–º–µ–Ω—É
                  </>
                )}
              </AlertDialogAction>
            </AlertDialogFooter>
          </AlertDialogContent>
        </AlertDialog>

        {/* Help Text */}
        <div className="text-xs text-muted-foreground text-center p-3 bg-muted/30 rounded-lg">
          üí° –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É +372 123 4567 –∏–ª–∏ —á–µ—Ä–µ–∑ —á–∞—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏
        </div>
      </CardContent>
    </Card>
  );
};

export default OrderCancellation;