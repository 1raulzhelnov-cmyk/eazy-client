import React, { useState } from 'react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Input } from '@/components/ui/input';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table';
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';
import { Label } from '@/components/ui/label';
import { 
  Megaphone, 
  Plus, 
  Eye, 
  Pause, 
  Play, 
  BarChart3,
  Users,
  Calendar,
  Target
} from 'lucide-react';

interface Campaign {
  id: string;
  name: string;
  type: 'email' | 'push' | 'sms' | 'promo';
  status: 'draft' | 'active' | 'paused' | 'completed';
  target_audience: string;
  start_date: string;
  end_date?: string;
  sent_count: number;
  opened_count: number;
  clicked_count: number;
  created_at: string;
  budget?: number;
  description: string;
}

// Mock data for demonstration
const mockCampaigns: Campaign[] = [
  {
    id: '1',
    name: '–°–∫–∏–¥–∫–∞ 20% –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑',
    type: 'email',
    status: 'active',
    target_audience: '–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
    start_date: new Date().toISOString(),
    end_date: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),
    sent_count: 1250,
    opened_count: 456,
    clicked_count: 89,
    created_at: new Date().toISOString(),
    budget: 500,
    description: '–ü—Ä–∏–≤–ª–µ—á–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ–º–æ—â—å—é –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–π —Å–∫–∏–¥–∫–∏'
  },
  {
    id: '2',
    name: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–º —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ',
    type: 'push',
    status: 'completed',
    target_audience: '–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏',
    start_date: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000).toISOString(),
    end_date: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000).toISOString(),
    sent_count: 5670,
    opened_count: 2890,
    clicked_count: 456,
    created_at: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString(),
    description: '–ê–Ω–æ–Ω—Å –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä—Ç–Ω–µ—Ä—Å–∫–æ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞'
  }
];

export default function CampaignsManagement() {
  const [campaigns] = useState<Campaign[]>(mockCampaigns);
  const [selectedCampaign, setSelectedCampaign] = useState<Campaign | null>(null);
  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);

  const stats = {
    total: campaigns.length,
    active: campaigns.filter(c => c.status === 'active').length,
    totalSent: campaigns.reduce((sum, c) => sum + c.sent_count, 0),
    totalClicked: campaigns.reduce((sum, c) => sum + c.clicked_count, 0)
  };

  const getStatusBadge = (status: string) => {
    switch (status) {
      case 'active':
        return <Badge className="bg-green-100 text-green-700 border-green-300">–ê–∫—Ç–∏–≤–Ω–∞</Badge>;
      case 'draft':
        return <Badge className="bg-gray-100 text-gray-700 border-gray-300">–ß–µ—Ä–Ω–æ–≤–∏–∫</Badge>;
      case 'paused':
        return <Badge className="bg-yellow-100 text-yellow-700 border-yellow-300">–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞</Badge>;
      case 'completed':
        return <Badge className="bg-blue-100 text-blue-700 border-blue-300">–ó–∞–≤–µ—Ä—à–µ–Ω–∞</Badge>;
      default:
        return <Badge variant="outline">{status}</Badge>;
    }
  };

  const getTypeIcon = (type: string) => {
    switch (type) {
      case 'email':
        return 'üìß';
      case 'push':
        return 'üîî';
      case 'sms':
        return 'üì±';
      case 'promo':
        return 'üéÅ';
      default:
        return 'üì¢';
    }
  };

  const calculateCTR = (clicked: number, sent: number) => {
    return sent > 0 ? ((clicked / sent) * 100).toFixed(1) : '0.0';
  };

  return (
    <div className="space-y-6">
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-3xl font-bold">–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏</h1>
          <p className="text-muted-foreground">
            –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –∫–∞–º–ø–∞–Ω–∏—è–º–∏ –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–µ–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
          </p>
        </div>
        <Dialog open={isCreateDialogOpen} onOpenChange={setIsCreateDialogOpen}>
          <DialogTrigger asChild>
            <Button>
              <Plus className="mr-2 h-4 w-4" />
              –°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é
            </Button>
          </DialogTrigger>
          <DialogContent className="max-w-2xl">
            <DialogHeader>
              <DialogTitle>–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∫–∞–º–ø–∞–Ω–∏—é</DialogTitle>
              <DialogDescription>
                –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–æ–≤–æ–π –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏
              </DialogDescription>
            </DialogHeader>
            <div className="space-y-4">
              <div className="grid grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="name">–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏</Label>
                  <Input id="name" placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ..." />
                </div>
                <div>
                  <Label htmlFor="type">–¢–∏–ø –∫–∞–º–ø–∞–Ω–∏–∏</Label>
                  <Select>
                    <SelectTrigger>
                      <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="email">Email —Ä–∞—Å—Å—ã–ª–∫–∞</SelectItem>
                      <SelectItem value="push">Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</SelectItem>
                      <SelectItem value="sms">SMS —Å–æ–æ–±—â–µ–Ω–∏—è</SelectItem>
                      <SelectItem value="promo">–ü—Ä–æ–º–æ –∞–∫—Ü–∏—è</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
              </div>
              
              <div>
                <Label htmlFor="audience">–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è</Label>
                <Select>
                  <SelectTrigger>
                    <SelectValue placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –∞—É–¥–∏—Ç–æ—Ä–∏—é" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="all">–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</SelectItem>
                    <SelectItem value="new">–ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</SelectItem>
                    <SelectItem value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</SelectItem>
                    <SelectItem value="inactive">–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div>
                <Label htmlFor="description">–û–ø–∏—Å–∞–Ω–∏–µ</Label>
                <Textarea 
                  id="description" 
                  placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –∫–∞–º–ø–∞–Ω–∏–∏..."
                  rows={3}
                />
              </div>

              <div className="grid grid-cols-2 gap-4">
                <div>
                  <Label htmlFor="start">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</Label>
                  <Input id="start" type="datetime-local" />
                </div>
                <div>
                  <Label htmlFor="end">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</Label>
                  <Input id="end" type="datetime-local" />
                </div>
              </div>

              <div className="flex justify-end space-x-2">
                <Button variant="outline" onClick={() => setIsCreateDialogOpen(false)}>
                  –û—Ç–º–µ–Ω–∞
                </Button>
                <Button>–°–æ–∑–¥–∞—Ç—å –∫–∞–º–ø–∞–Ω–∏—é</Button>
              </div>
            </div>
          </DialogContent>
        </Dialog>
      </div>

      {/* Stats Cards */}
      <div className="grid gap-4 md:grid-cols-4">
        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–í—Å–µ–≥–æ –∫–∞–º–ø–∞–Ω–∏–π</CardTitle>
            <Megaphone className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.total}</div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–ê–∫—Ç–∏–≤–Ω—ã–µ</CardTitle>
            <Play className="h-4 w-4 text-green-500" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.active}</div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</CardTitle>
            <Users className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.totalSent.toLocaleString()}</div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
            <CardTitle className="text-sm font-medium">–ü–µ—Ä–µ—Ö–æ–¥–æ–≤</CardTitle>
            <Target className="h-4 w-4 text-muted-foreground" />
          </CardHeader>
          <CardContent>
            <div className="text-2xl font-bold">{stats.totalClicked.toLocaleString()}</div>
          </CardContent>
        </Card>
      </div>

      {/* Campaigns Table */}
      <Card>
        <CardHeader>
          <CardTitle>–°–ø–∏—Å–æ–∫ –∫–∞–º–ø–∞–Ω–∏–π</CardTitle>
          <CardDescription>
            –í—Å–µ —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤—ã–µ –∫–∞–º–ø–∞–Ω–∏–∏
          </CardDescription>
        </CardHeader>
        <CardContent>
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>–ö–∞–º–ø–∞–Ω–∏—è</TableHead>
                <TableHead>–¢–∏–ø</TableHead>
                <TableHead>–ê—É–¥–∏—Ç–æ—Ä–∏—è</TableHead>
                <TableHead>–°—Ç–∞—Ç—É—Å</TableHead>
                <TableHead>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</TableHead>
                <TableHead>CTR</TableHead>
                <TableHead>–î–µ–π—Å—Ç–≤–∏—è</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {campaigns.map((campaign) => (
                <TableRow key={campaign.id}>
                  <TableCell>
                    <div className="space-y-1">
                      <div className="font-medium">{campaign.name}</div>
                      <div className="text-sm text-muted-foreground">
                        {new Date(campaign.start_date).toLocaleDateString('ru-RU')} - 
                        {campaign.end_date ? new Date(campaign.end_date).toLocaleDateString('ru-RU') : '–ë–µ—Å—Å—Ä–æ—á–Ω–æ'}
                      </div>
                    </div>
                  </TableCell>
                  <TableCell>
                    <div className="flex items-center">
                      <span className="mr-2">{getTypeIcon(campaign.type)}</span>
                      <span className="capitalize">{campaign.type}</span>
                    </div>
                  </TableCell>
                  <TableCell>{campaign.target_audience}</TableCell>
                  <TableCell>
                    {getStatusBadge(campaign.status)}
                  </TableCell>
                  <TableCell>
                    <div className="text-sm space-y-1">
                      <div>–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {campaign.sent_count.toLocaleString()}</div>
                      <div>–û—Ç–∫—Ä—ã—Ç–æ: {campaign.opened_count.toLocaleString()}</div>
                      <div>–ü–µ—Ä–µ—Ö–æ–¥–æ–≤: {campaign.clicked_count.toLocaleString()}</div>
                    </div>
                  </TableCell>
                  <TableCell>
                    <div className="text-sm font-medium">
                      {calculateCTR(campaign.clicked_count, campaign.sent_count)}%
                    </div>
                  </TableCell>
                  <TableCell>
                    <div className="flex space-x-2">
                      <Dialog>
                        <DialogTrigger asChild>
                          <Button 
                            variant="outline" 
                            size="sm"
                            onClick={() => setSelectedCampaign(campaign)}
                          >
                            <Eye className="mr-1 h-3 w-3" />
                            –ü—Ä–æ—Å–º–æ—Ç—Ä
                          </Button>
                        </DialogTrigger>
                        <DialogContent className="max-w-2xl">
                          <DialogHeader>
                            <DialogTitle>–î–µ—Ç–∞–ª–∏ –∫–∞–º–ø–∞–Ω–∏–∏</DialogTitle>
                          </DialogHeader>
                          {selectedCampaign && (
                            <div className="space-y-4">
                              <div className="grid grid-cols-2 gap-4">
                                <div>
                                  <Label>–ù–∞–∑–≤–∞–Ω–∏–µ:</Label>
                                  <p className="text-sm text-muted-foreground">{selectedCampaign.name}</p>
                                </div>
                                <div>
                                  <Label>–¢–∏–ø:</Label>
                                  <p className="text-sm text-muted-foreground">{selectedCampaign.type}</p>
                                </div>
                                <div>
                                  <Label>–°—Ç–∞—Ç—É—Å:</Label>
                                  <div className="mt-1">{getStatusBadge(selectedCampaign.status)}</div>
                                </div>
                                <div>
                                  <Label>–ë—é–¥–∂–µ—Ç:</Label>
                                  <p className="text-sm text-muted-foreground">
                                    {selectedCampaign.budget ? `‚Ç¨${selectedCampaign.budget}` : '–ù–µ —É–∫–∞–∑–∞–Ω'}
                                  </p>
                                </div>
                              </div>
                              
                              <div>
                                <Label>–û–ø–∏—Å–∞–Ω–∏–µ:</Label>
                                <p className="text-sm text-muted-foreground mt-1">{selectedCampaign.description}</p>
                              </div>

                              <div className="grid grid-cols-3 gap-4">
                                <div className="text-center p-4 bg-muted rounded-lg">
                                  <div className="text-2xl font-bold">{selectedCampaign.sent_count}</div>
                                  <div className="text-sm text-muted-foreground">–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ</div>
                                </div>
                                <div className="text-center p-4 bg-muted rounded-lg">
                                  <div className="text-2xl font-bold">{selectedCampaign.opened_count}</div>
                                  <div className="text-sm text-muted-foreground">–û—Ç–∫—Ä—ã—Ç–æ</div>
                                </div>
                                <div className="text-center p-4 bg-muted rounded-lg">
                                  <div className="text-2xl font-bold">{selectedCampaign.clicked_count}</div>
                                  <div className="text-sm text-muted-foreground">–ü–µ—Ä–µ—Ö–æ–¥–æ–≤</div>
                                </div>
                              </div>
                            </div>
                          )}
                        </DialogContent>
                      </Dialog>
                      
                      {campaign.status === 'active' && (
                        <Button variant="outline" size="sm">
                          <Pause className="mr-1 h-3 w-3" />
                          –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
                        </Button>
                      )}
                      
                      {campaign.status === 'paused' && (
                        <Button variant="outline" size="sm">
                          <Play className="mr-1 h-3 w-3" />
                          –í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å
                        </Button>
                      )}
                    </div>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </CardContent>
      </Card>
    </div>
  );
}